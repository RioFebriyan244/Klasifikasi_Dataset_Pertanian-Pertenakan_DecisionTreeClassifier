# -*- coding: utf-8 -*-
"""Klasifikasi_Dataset_Pertanian & Perternakan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MKDGe3tsn8zEMrZQ_8bcwI7U0yTu5MtI
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

# 2. Load Dataset
df = pd.read_csv('Pertanian_Peternakan.csv')

# 3. Exploratory Data Analysis
print(df.head())
print(df["Jenis Komoditas"].value_counts())

# 4. Encoding dan Feature Selection
label_encoder = LabelEncoder()
df["Label"] = label_encoder.fit_transform(df["Jenis Komoditas"])
X = df[["Luas Lahan (ha)", "Produksi (ton)", "Jumlah Ternak (ekor)",
        "Berat Rata-rata Ternak (kg)", "Umur Panen (hari)"]]
y = df["Label"]

# 5. Preprocessing
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 6. Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y_encoded, test_size=0.2, random_state=42)

# 7. Decision Tree Modeling
clf = DecisionTreeClassifier(criterion='entropy', max_depth=10, random_state=42)
clf.fit(X_train, y_train)

# 8. Evaluation
y_pred = clf.predict(X_test)
acc = accuracy_score(y_test, y_pred)
print(f"Akurasi: {acc:.2f}")
print("Classification")

# 9. Confusion Matrix
plt.figure(figsize=(8, 6))
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d',
            xticklabels=label_encoder.classes_, yticklabels=label_encoder.classes_, cmap='Blues')
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("True")
plt.show()

# 10. Visualisasi Tree
plt.figure(figsize=(20, 10))
plot_tree(clf, feature_names=X.columns, class_names=label_encoder.classes_, filled=True, rounded=True, fontsize=10)
plt.title("Decision Tree Visualization")
plt.show()